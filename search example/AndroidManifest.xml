<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.sonymobile.sonyselect"
    android:versionCode="6291485"
    android:versionName="3.0.A.0.29">

    <permission
        android:name="com.sonymobile.sonyselect.SHOW_CUSTOM_CONTENT"
        android:protectionLevel="normal" />

    <uses-sdk
        android:minSdkVersion="16"
        android:targetSdkVersion="19" />

    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.DISABLE_KEYGUARD" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    
    <!--
        Needed to set status and navigation bar translucent. Note that this only works if the app is
        installed in /system/app.
    -->
    <uses-permission android:name="com.sonymobile.permission.SYSTEM_UI_VISIBILITY_EXTENSIONS" />

    <supports-screens
        android:anyDensity="true"
        android:largeScreens="true"
        android:normalScreens="true"
        android:smallScreens="false"
        android:xlargeScreens="true" />

    <application
        android:name=".application.SonySelectApplication"
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/AppNameFun"
        android:theme="@style/ThemeStyle" >
        <activity
            android:name=".activities.LaunchActivity"
            android:configChanges="orientation|keyboardHidden"
            android:launchMode="singleTask" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <meta-data
                android:name="android.app.default_searchable"
                android:value="com.sonymobile.sonyselect.activities.SearchResultsActivity" />
        </activity>
        <activity
            android:name=".activities.SecretCodeActivity"
            android:theme="@android:style/Theme.Holo.Light" />
        <activity android:name=".activities.ExternalActivity" />
    
        <activity
            android:name="com.sonymobile.sonyselect.activities.SearchResultsActivity"
            android:configChanges="orientation|keyboardHidden"
            android:label="@string/SearchResults" >
            <meta-data
                android:name="android.app.searchable"
                android:resource="@xml/searchable" />

            <intent-filter>
                <action android:name="android.intent.action.SEARCH" />
            </intent-filter>
        </activity>

        <!--
            This one is implemented in the Sony Select SDK and must be added to
            the client manifest if the client wants to use the SDK.
        -->
        <service
            android:name=".api.synchronization.SyncService"
            android:enabled="true"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.sonymobile.sonyselect.action.SYNC_REQUEST" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </service>

        <!--
            This one is implemented in the Sony Select SDK and should only be added
            to the client manifest if the client is implementing functionality to
            switch the device usage logging on or off.
        -->
        <service
            android:name=".api.content.UsageService"
            android:enabled="true"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.sonymobile.sonyselect.action.USAGE_CHECK" />
                <action android:name="com.sonymobile.sonyselect.action.USAGE_SET" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </service>
        <service
            android:name="com.sonymobile.sonyselect.bi.PackageInstallationService"
            android:enabled="true"
            android:exported="false" >
        </service>

        <receiver android:name="com.sonymobile.sonyselect.bi.PackageInstallationReceiver" >
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_ADDED" />

                <data android:scheme="package" />
            </intent-filter>
        </receiver>

        <!--
            This one is implemented in the Sony Select SDK and must be added to
            the client manifest if the client wants to use the SDK.
        -->
        <provider
            android:name=".api.content.SonySelectProvider"
            android:authorities="com.sonymobile.sonyselect.provider"
            android:enabled="true"
            android:exported="false" />

        <!-- The third party client API (e.g. camera) receiver. -->
        <receiver
            android:name=".receiver.CustomRequestReceiver"
            android:exported="true"
            android:permission="com.sonymobile.sonyselect.SHOW_CUSTOM_CONTENT" >
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />

                <data
                    android:host="com.sonymobile.sonyselect"
                    android:pathPattern="/channel/.*/first"
                    android:scheme="content" />
            </intent-filter>
        </receiver>

        <!-- GA receiver for market referrals -->
        <receiver
            android:name="com.google.android.apps.analytics.AnalyticsReceiver"
            android:exported="true"
            tools:ignore="MissingRegistered,ExportedReceiver" >
            <intent-filter>
                <action android:name="com.android.vending.INSTALL_REFERRER" />
            </intent-filter>
        </receiver>

        <!-- Receiver for secret code callback from the num-pad. -->
        <receiver android:name=".receiver.SecretCodeReceiver" >
            <intent-filter>
                <action android:name="android.provider.Telephony.SECRET_CODE" />

                <data
                    android:host="735328"
                    android:scheme="android_secret_code" />
            </intent-filter>
        </receiver>
    </application>

</manifest>

buildscript {
    repositories {
//        If you want to use regular gradle repository - uncomment below
        mavenCentral()

//        If you want to use sonys gradle repository - uncomment below
//            maven { url "http://seldlnx123.corpusers.net:8081/nexus/content/groups/public/" }
    }
    dependencies {
//        If you want to use regular Android studio and gradle - uncomment below
        classpath 'com.android.tools.build:gradle:0.9.2'

//        If you want to use sony specific Android studio and gradle - uncomment below
//        classpath "com.sonymobile:sonyandroid:0.1.5"
    }
}

//If you want to use regular plugin - uncomment below
apply plugin: 'android'
apply plugin: 'findbugs'

//If you want to use sonys plugin - uncomment below
//apply plugin: 'sonyandroid'

repositories {
    mavenCentral()
}
dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    androidTestCompile fileTree(dir: 'tests/target/libs', include: '*.jar')
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.0.3'

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        androidTest.setRoot('tests')
        androidTest {
            manifest.srcFile 'tests/target/AndroidManifest.xml'
            java.srcDirs = ['tests/target/src']
            res.srcDirs = ['tests/target/res']
        }

        signingConfigs {
            debug {
                storeFile file("certs/debug.keystore")
                storePassword "android"
                keyAlias "androiddebugkey"
                keyPassword "android"
            }
        }

    }

    lintOptions {
        abortOnError false
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

task findbugs(type: FindBugs) {
    ignoreFailures = true
    excludeFilter file('findbugs-exclude.xml')
    classes = fileTree('build/classes/debug/')
    source = fileTree('src/')
    classpath = files()
    effort = 'max'
}
